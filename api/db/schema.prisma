datasource db {
  provider = "postgresql"
  url = env("DATABASE_URL")
  // directUrl is now available with Prisma 4.16+ for Supabase migrations
  // Uncomment and configure as needed:
  // directUrl = env("DIRECT_DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = "native"
}

// Define your own datamodels here and run `yarn redwood prisma migrate dev`
// to create migrations for them and apply to your dev DB.
model Webhook {
  id String @id @default(cuid())
  alias  String?
  createdAt DateTime @default(now())
  createdById String?
  createdBy User? @relation(fields: [createdById], references: [id])
  updatedAt DateTime @default(now()) @updatedAt
  destinationEndpoints String
  invocationUri String
  maxDelaySeconds Int?
  invocations Int
  isEnabled Boolean
  isArchived Boolean
  isDeleted Boolean
  hasEstimate Boolean
  estimatedTime Int?
  ScheduledInvocations ScheduledInvocation[]
}

model User {
  id                  String @id @default(cuid())
  name                String?
  email               String    @unique
  hashedPassword      String
  salt                String
  resetToken          String?
  resetTokenExpiresAt DateTime?
  audits    Audit[]
  webhooks Webhook[]
}

model Audit {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  log       String
}

model ScheduledInvocation {
  id                 String @id @default(cuid())
  webhookId          String?
  webhook            Webhook? @relation(fields: [webhookId], references: [id])
  invokeEndpointAt   DateTime
  isCompleted        Boolean
  successfulResponse Boolean
  endpointUri        String
  payload            String
  httpMethod         String
  queryParams        String
  headers            String?
}

